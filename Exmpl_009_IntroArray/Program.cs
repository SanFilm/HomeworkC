// See https://aka.ms/new-console-template for more information
// Очистка консоли.
Console.Clear();
// Console.WriteLine("Hello, World!");


/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
//                    ||     _230308(l)-C#     ||                 //
//                    ||        Лекция.        ||                 //
//         _Урок 2. Знакомство с функциями и массивами.
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */

//        Массивы.

//                                                        [00:20:01]
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */

/* -> Объявление одномерного массива.-> -> -> -> -> -> -> -> -> ->*/
// ТИП ДАННЫХ[] ИМЯ = {Значение1, Значение2, ...};
// int[] array = { 9, 28, 1, 32, 1990 };
// int[] array = { 0, 0, 0, 0, 0 };
// int[] array = new int[5];
// int[] array = new int[] { 0, 0, 0, 0, 0 };
// int[] array = new int[5] { 1, 0, 2, 0, 3 };
/* <- <- <- <- <- <- <- <- <- <- Объявление одномерного массива.<-*/

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
// --------------------------------------------------------------
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*
Задача:
Поиск максимума из 9 чисел массива.
*/
// --------------------------------------------------------------
/* Решение С методом. */
// !!! Методы ВСЕГДА пишутся с верху !!! //
// - Методы(функции).-> -> -> -> -> -> -> -> -> -> -> -> -> -> ->
int Max(int arg1, int arg2, int arg3)
{
  int result = arg1;
  if (result < arg2) result = arg2;
  if (result < arg3) result = arg3;
  return result;
}
// <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- Методы(функции) -

// индекс -      0   1   2   3   4   5   6   7   8       - индекс //
int[] array = { 11, 21, 31, 41, 15, 61, 17, 18, 19 };
// перезапись значения элемента (12) под индексом - 0.
array[0] = 12;
// обращение и вывод значения - число 12.
Console.WriteLine($"Индекс 0 имеет значение: {array[0]}");
// обращение и вывод значения - число 15.
Console.WriteLine($"Индекс 4 имеет значение: {array[4]}");

int result = Max(
  Max(array[0], array[1], array[2]),
  Max(array[3], array[4], array[5]),
  Max(array[6], array[7], array[8])
);
Console.WriteLine($"Максимальное значение массива: {result}");
// --------------------------------------------------------------

// --------------------------------------------------------------
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*
Задача:                                                   [00:25:50]
Поиск ИНДЕКСА нужного элемента в массиве, с использованием FANCTION.

Условие:
Имеется одномерный массив arra из n элементов, требуется найти элемент массива, равный find
1. Установить счетчик index в позицию 0
2. Если arra [index] = find, алгоритм завершил работу успешно.
3. Увеличить index на 1
4. Если index < n, то перейти к шагу 2. В противном случае алгоритм завершил работу безуспешно.
*/
// --------------------------------------------------------------

// ! Решение БЕЗ метода. ! //
int[] arra = { 1, 12, 31, 4, 18, 15, 16, 17, 18 };
int n = arra.Length;
int find = 18, index = 0;
while (index < n)
{
  if (arra[index] == find)
  {
    Console.WriteLine($"\nИндекс искомого числа = {index}\n");
    // После 1-го совпадения выход из цикла.
    break;
  }
  index++;
}
// --------------------------------------------------------------
// --------------------------------------------------------------

// ! Решение С методами. ! //
//  Методы ВСЕГДА пишутся с верху  //
// - Методы(функции).-> -> -> -> -> -> -> -> -> -> -> -> -> -> ->
/* Заполнение массива длинны N случайными числами */
void FillArr(int[] collection)  // 'void' - метод ничего не возвращающий.
{
  int length = collection.Length;
  int index = 0;
  while (index < length)
  {
    collection[index] = new Random().Next(1, 10);   // 1-9
    index++;
  }
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
/* Печать(вывод) массива в консоль */
void PrintArr(int[] col)  // 'void' - метод ничего не возвращающий.
{
  int count = col.Length;
  int position = 0;
  while (position < count)
  {
    Console.Write($"{col[position]} ");
    position++;
  }
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
int IndexOf(int[] collection, int find)   // <- метод, который и принимает, и возвращает данные.
{
  int count = collection.Length;
  int index = 0;
  int position = -1;    // если нет совпадения -> -1.
  while (index < count)
  {
    if (collection[index] == find)
    {
      position = index;
      // 'break' - выход после 1-го совпадения.
      // без 'break' - выводит последнее совпадение.
      break;
    }
    index++;
  }
  return position;
}
// <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- Методы(функции) -

int[] arr = new int[10];
FillArr(arr);
PrintArr(arr);

int pos = IndexOf(arr, 4);
Console.WriteLine($"\nИндекс искомого числа = {pos}\n");
// --------------------------------------------------------------
// See https://aka.ms/new-console-template for more information
// Очистка консоли.
Console.Clear();
// Console.WriteLine("Hello, World!");

/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
//                    ||     _230322(l)-C#     ||                 //
//                    ||        Лекция.        ||                 //
//         _Урок 4. Двумерные массивы и рекурсия.mp4
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
//        Двумерные массивы.
/* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */

//                                                        [00:03:00]

// // Объявление двумерного массива строк.
// string[,] table = new string[2, 5];
// // Обращение к элементу.
// table[1, 3] = "Слово";
// // Заполнение массива строк.
// for (int i = 0; i < table.GetLength(0); i++)
// {
//   for (int j = 0; j < table.GetLength(1); j++)
//   {
//     Console.WriteLine($"-{table[i, j]}-");
//   }
//   Console.WriteLine();
// }

//                                                        [00:07:05]
int m = 3, n = 4;
// Объявление двумерного массива целых чисел.
int[,] matrix = new int[m, n];                            // [3, 4]
// Обращение к элементу массива.
matrix[1, 1] = 11;    // Меняется после объявления массива.
// Заполнение массива целых чисел.
/*                  к количеству строк      */
// for (int i = 0; i < matrix.GetLength(0); i++)
// {
//   /*                 к количеству столбцов      */
//   for (int j = 0; j < matrix.GetLength(1); j++)
//   {
//     Console.Write($"{matrix[i, j]} \t");
//   }
//   Console.WriteLine();
// }
//                                                        [00:07:05]

// Console.WriteLine();

//                                                        [00:10:20]
// !!! Превращение в МЕТОД !!! Заполнение массива 0.
void PrintArray(int[,] matr)
{
  /*                  к количеству строк      */
  for (int i = 0; i < matr.GetLength(0); i++)
  {
    /*                 к количеству столбцов      */
    for (int j = 0; j < matr.GetLength(1); j++)
    {
      Console.Write($"{matr[i, j]} \t");
    }
    Console.WriteLine();
  }
}

// Тело кода.
matrix = new int[m, n - 1];                               // [3, 3]
matrix[1, 2] = 22;    // Меняется после объявления массива.
// PrintArray(matrix);

//                                                        [00:10:20]

// Console.WriteLine();

//                                                        [00:11:30]
// !!! Превращение в МЕТОД !!! Random массива.
void RandomArray(int[,] matr)
{
  for (int i = 0; i < matr.GetLength(0); i++)
  {
    for (int j = 0; j < matr.GetLength(1); j++)
    {
      matr[i, j] = new Random().Next(1, 10);   // [1, 9)
    }
  }
}

// Тело кода.
matrix = new int[m + 1, n + 1];                           // [4, 5]
// PrintArray(matrix);    // Проверка инициализации массива 0-ми.
// Console.WriteLine();
// RandomArray(matrix);
matrix[2, 0] = 333;    // Меняется после объявления массива.
// PrintArray(matrix);
//                                                        [00:11:30]

//                                                        [00:14:30]
//                                                        [00:19:20]
int[,] pic = new int[,]
{
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};
void PrintImage(int[,] image)
{
  for (int i = 0; i < image.GetLength(0); i++)
  {
    for (int j = 0; j < image.GetLength(1); j++)
    {
      if (image[i, j] == 0) Console.Write($" ");
      else Console.Write($"+");
    }
    Console.WriteLine();
  }
}
void FillImage(int row, int col)
{
  if (pic[row, col] == 0)
  {
    pic[row, col] = 1;
    FillImage(row - 1, col);
    FillImage(row, col - 1);
    FillImage(row + 1, col);
    FillImage(row, col + 1);
  }
}
PrintImage(pic);
FillImage(13, 13);
PrintImage(pic);